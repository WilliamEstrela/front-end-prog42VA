package com.example.myapplication.webservice.exluir;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------





import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.kxml2.kdom.Element;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class IWTRemoverReprovacaoServiceSoapBinding
{
    interface IWTIWcfMethod
    {
        IWTExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(IWTExtendedSoapSerializationEnvelope __envelope,java.lang.Object result) throws java.lang.Exception;
    }

    String url="http://localhost:8080/CRUDReprovacaoWS/services/RemoverReprovacaoPort";

    int timeOut=60000;
    public List< HeaderProperty> httpHeaders= new ArrayList< HeaderProperty>();
    public boolean enableLogging;

    IWTIServiceEvents callback;
    public IWTRemoverReprovacaoServiceSoapBinding(){}

    public IWTRemoverReprovacaoServiceSoapBinding (IWTIServiceEvents callback)
    {
        this.callback = callback;
    }
    public IWTRemoverReprovacaoServiceSoapBinding(IWTIServiceEvents callback,String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public IWTRemoverReprovacaoServiceSoapBinding(IWTIServiceEvents callback,String url,int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                return new com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE(uri.getHost(), port, uri.getPath(), timeOut);
            }
            else
            {
                return new com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }

    protected IWTExtendedSoapSerializationEnvelope createEnvelope()
    {
        IWTExtendedSoapSerializationEnvelope envelope= new IWTExtendedSoapSerializationEnvelope(IWTExtendedSoapSerializationEnvelope.VER12);
            return envelope;
    }

    protected java.util.List sendRequest(String methodName,IWTExtendedSoapSerializationEnvelope envelope,org.ksoap2.transport.Transport transport ,com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile )throws java.lang.Exception
    {
        if(transport instanceof com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE )
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }
        else
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }
    }

    java.lang.Object getResult(java.lang.Class destObj,java.lang.Object source,String resultName,IWTExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance=__envelope.get(j,destObj,false);
                return instance;
            }
            else if( soap.getName().equals(resultName)) 
            {
                java.lang.Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
        }

        return null;
    }

    
    public IWTretorno removerReprovacao(final IWTreprovacao reprovacao ) throws java.lang.Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        return (IWTretorno)execute(new IWTIWcfMethod()
        {
            @Override
            public IWTExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                IWTExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("","reprovacao",new IWTreprovacao().getClass());
                SoapObject __soapReq = new SoapObject("http://webservice/", "removerReprovacao");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="";
                __info.name="reprovacao";
                __info.type=IWTreprovacao.class;
                __info.setValue(reprovacao!=null?reprovacao:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public java.lang.Object ProcessResult(IWTExtendedSoapSerializationEnvelope __envelope,java.lang.Object __result)throws java.lang.Exception {
                return (IWTretorno)getResult(IWTretorno.class,__result,"return",__envelope);
            }
        },"urn:RemoverReprovacao",__profile);
    }
    
    public android.os.AsyncTask< Void, Void, IWTOperationResult< IWTretorno>> removerReprovacaoAsync(final IWTreprovacao reprovacao)
    {
        return executeAsync(new IWTFunctions.IFunc< IWTretorno>() {
            public IWTretorno Func() throws java.lang.Exception {
                return removerReprovacao( reprovacao);
            }
        },"removerReprovacao");
    }

    protected java.lang.Object execute(IWTIWcfMethod wcfMethod,String methodName,com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile) throws java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        IWTExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport,profile);
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);

                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }

    protected < T> android.os.AsyncTask< Void, Void, IWTOperationResult< T>>  executeAsync(final IWTFunctions.IFunc< T> func, final String methodName)
    {
        return new android.os.AsyncTask< Void, Void, IWTOperationResult< T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            };
            @Override
            protected IWTOperationResult< T> doInBackground(Void... params) {
                IWTOperationResult< T> result = new IWTOperationResult< T>();
                try
                {
                    result.MethodName=methodName;
                    result.Result= func.Func();
                }
                catch(java.lang.Exception ex)
                {
                    ex.printStackTrace();
                    result.Exception=ex;
                }
                return result;
            }
            
            @Override
            protected void onPostExecute(IWTOperationResult< T> result)
            {
                callback.Completed(result);
            }
        }.execute();
    }

    protected java.lang.Exception convertToException(org.ksoap2.SoapFault fault,IWTExtendedSoapSerializationEnvelope envelope)
    {
        org.ksoap2.SoapFault newException = fault;
                return newException;
    }
}


